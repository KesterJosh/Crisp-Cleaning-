{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./calender.css';import gsap from'gsap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Calendar=()=>{const[currentMonth,setCurrentMonth]=useState(new Date());const calendarRef=useRef(null);useEffect(()=>{gsap.fromTo(calendarRef.current,{opacity:0,x:-20},{opacity:1,x:0,duration:0.5});},[currentMonth]);const handleNextMonth=()=>{gsap.to(calendarRef.current,{opacity:0,x:20,duration:0.5,onComplete:()=>{setCurrentMonth(prevMonth=>{const nextMonth=new Date(prevMonth);nextMonth.setMonth(prevMonth.getMonth()+1);return nextMonth;});}});};const handlePrevMonth=()=>{gsap.to(calendarRef.current,{opacity:0,x:-20,duration:0.5,onComplete:()=>{setCurrentMonth(prevMonth=>{const prevMonthCopy=new Date(prevMonth);prevMonthCopy.setMonth(prevMonth.getMonth()-1);return prevMonthCopy;});}});};// const getDaysInMonth = (date) => {\n//   const year = date.getFullYear();\n//   const month = date.getMonth() + 1;\n//   return new Date(year, month, 0).getDate();\n// };\nconst getDaysInMonth=date=>{const year=date.getFullYear();const month=date.getMonth();// Zero-indexed month\nreturn new Date(year,month+1,0).getDate();};const generateMonthDays=()=>{const totalDays=getDaysInMonth(currentMonth);return Array.from({length:totalDays},(_,index)=>index+1);};const generateDaysTable=()=>{const currentMonthDays=generateMonthDays();const firstDayOfMonth=new Date(currentMonth.getFullYear(),currentMonth.getMonth(),1);const startingDay=firstDayOfMonth.getDay();// 0 for Sunday, 1 for Monday, etc.\nconst daysTable=[];let currentWeek=[];// Fill in empty cells for days before the start of the month\nfor(let i=0;i<startingDay;i++){currentWeek.push(null);}currentMonthDays.forEach(day=>{currentWeek.push(day);// Start a new row for the next week (Sunday)\nif(currentWeek.length===7){daysTable.push(currentWeek);currentWeek=[];}});// Fill in empty cells for days after the end of the month\nwhile(currentWeek.length<7){currentWeek.push(null);}daysTable.push(currentWeek);return daysTable;};const renderTableHeader=()=>{const weekdays=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];return/*#__PURE__*/_jsx(\"tr\",{children:weekdays.map(day=>/*#__PURE__*/_jsx(\"th\",{className:\"home-text055\",children:/*#__PURE__*/_jsx(\"div\",{class:\"home-container093\",children:/*#__PURE__*/_jsx(\"span\",{class:\"home-text056\",children:day})})},day))});};const isFirstMonth=()=>{const currentDate=new Date();return currentMonth.getMonth()===currentDate.getMonth()&&currentMonth.getFullYear()===currentDate.getFullYear();};const isLastMonth=()=>{const currentDate=new Date();const nextThreeMonths=new Date(currentDate);nextThreeMonths.setMonth(currentDate.getMonth()+2);return currentMonth>nextThreeMonths;};const highlightCurrentDay=day=>{const currentDate=new Date();return currentMonth.getMonth()===currentDate.getMonth()&&currentMonth.getFullYear()===currentDate.getFullYear()&&day===currentDate.getDate();};return/*#__PURE__*/_jsxs(\"div\",{className:\"home-container087\",ref:calendarRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"home-container088\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"home-text055\",children:currentMonth.toLocaleString('default',{month:'long',year:'numeric'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"home-container089\",children:[!isFirstMonth()&&/*#__PURE__*/_jsx(\"div\",{className:\"home-container090\",onClick:handlePrevMonth,children:/*#__PURE__*/_jsx(\"img\",{alt:\"image\",src:\"/img/left-200w.png\",className:\"home-image16\"})}),!isLastMonth()&&/*#__PURE__*/_jsx(\"div\",{className:\"home-container091\",onClick:handleNextMonth,children:/*#__PURE__*/_jsx(\"img\",{alt:\"image\",src:\"/img/right-200w.png\",className:\"home-image17\"})})]})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"calendar-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:renderTableHeader()}),/*#__PURE__*/_jsx(\"tbody\",{children:generateDaysTable().map((week,weekIndex)=>/*#__PURE__*/_jsx(\"tr\",{children:week.map((day,dayIndex)=>/*#__PURE__*/_jsx(\"td\",{children:day!==null?/*#__PURE__*/_jsx(\"div\",{class:\"home-container109X\",children:/*#__PURE__*/_jsx(\"div\",{class:highlightCurrentDay(day)?'home-container110XSelect':'home-container110X',children:/*#__PURE__*/_jsx(\"span\",{class:highlightCurrentDay(day)?'home-textSelect':'home-text067X',children:day})})}):null},dayIndex))},weekIndex))})]})]});};export default Calendar;","map":{"version":3,"names":["React","useState","useRef","useEffect","gsap","jsx","_jsx","jsxs","_jsxs","Calendar","currentMonth","setCurrentMonth","Date","calendarRef","fromTo","current","opacity","x","duration","handleNextMonth","to","onComplete","prevMonth","nextMonth","setMonth","getMonth","handlePrevMonth","prevMonthCopy","getDaysInMonth","date","year","getFullYear","month","getDate","generateMonthDays","totalDays","Array","from","length","_","index","generateDaysTable","currentMonthDays","firstDayOfMonth","startingDay","getDay","daysTable","currentWeek","i","push","forEach","day","renderTableHeader","weekdays","children","map","className","class","isFirstMonth","currentDate","isLastMonth","nextThreeMonths","highlightCurrentDay","ref","toLocaleString","onClick","alt","src","week","weekIndex","dayIndex"],"sources":["C:/Users/USER/Documents/GitHub/Crisp/src/views/calender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './calender.css';\nimport gsap from 'gsap';\n\n\nconst Calendar = () => {\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const calendarRef = useRef(null);\n\n  useEffect(() => {\n    gsap.fromTo(calendarRef.current, { opacity: 0, x: -20 }, { opacity: 1, x: 0, duration: 0.5 });\n  }, [currentMonth]);\n\n  const handleNextMonth = () => {\n    gsap.to(calendarRef.current, { opacity: 0, x: 20, duration: 0.5, onComplete: () => {\n      setCurrentMonth((prevMonth) => {\n        const nextMonth = new Date(prevMonth);\n        nextMonth.setMonth(prevMonth.getMonth() + 1);\n        return nextMonth;\n      });\n    }});\n  };\n\n  const handlePrevMonth = () => {\n    gsap.to(calendarRef.current, { opacity: 0, x: -20, duration: 0.5, onComplete: () => {\n      setCurrentMonth((prevMonth) => {\n        const prevMonthCopy = new Date(prevMonth);\n        prevMonthCopy.setMonth(prevMonth.getMonth() - 1);\n        return prevMonthCopy;\n      });\n    }});\n  };\n\n  // const getDaysInMonth = (date) => {\n  //   const year = date.getFullYear();\n  //   const month = date.getMonth() + 1;\n  //   return new Date(year, month, 0).getDate();\n  // };\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth(); // Zero-indexed month\n    return new Date(year, month + 1, 0).getDate();\n  };\n\n  const generateMonthDays = () => {\n    const totalDays = getDaysInMonth(currentMonth);\n    return Array.from({ length: totalDays }, (_, index) => index + 1);\n  };\n\n  const generateDaysTable = () => {\n    const currentMonthDays = generateMonthDays();\n    const firstDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n    const startingDay = firstDayOfMonth.getDay(); // 0 for Sunday, 1 for Monday, etc.\n\n    const daysTable = [];\n    let currentWeek = [];\n\n    // Fill in empty cells for days before the start of the month\n    for (let i = 0; i < startingDay; i++) {\n      currentWeek.push(null);\n    }\n\n    currentMonthDays.forEach((day) => {\n      currentWeek.push(day);\n\n      // Start a new row for the next week (Sunday)\n      if (currentWeek.length === 7) {\n        daysTable.push(currentWeek);\n        currentWeek = [];\n      }\n    });\n\n    // Fill in empty cells for days after the end of the month\n    while (currentWeek.length < 7) {\n      currentWeek.push(null);\n    }\n\n    daysTable.push(currentWeek);\n\n    return daysTable;\n  };\n\n  const renderTableHeader = () => {\n    const weekdays = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    return (\n      <tr>\n        {weekdays.map((day) => (\n          <th key={day} className='home-text055'>\n            <div class=\"home-container093\">\n                <span class=\"home-text056\">{day}</span>\n            </div></th>\n        ))}\n      </tr>\n    );\n  };\n\n  const isFirstMonth = () => {\n    const currentDate = new Date();\n    return currentMonth.getMonth() === currentDate.getMonth() && currentMonth.getFullYear() === currentDate.getFullYear();\n  };\n\n  const isLastMonth = () => {\n    const currentDate = new Date();\n    const nextThreeMonths = new Date(currentDate);\n    nextThreeMonths.setMonth(currentDate.getMonth() + 2);\n    return currentMonth > nextThreeMonths;\n  };\n\n  const highlightCurrentDay = (day) => {\n    const currentDate = new Date();\n    return (\n      currentMonth.getMonth() === currentDate.getMonth() &&\n      currentMonth.getFullYear() === currentDate.getFullYear() &&\n      day === currentDate.getDate()\n    );\n  };\n\n  return (\n    <div className=\"home-container087\" ref={calendarRef}>\n      <div className=\"home-container088\">\n        <span className=\"home-text055\">{currentMonth.toLocaleString('default', { month: 'long', year: 'numeric' })}</span>\n        <div className=\"home-container089\">\n          {!isFirstMonth() && (\n            <div className=\"home-container090\"\n            onClick={handlePrevMonth}>\n              <img\n                alt=\"image\"\n                src=\"/img/left-200w.png\"\n                className=\"home-image16\"\n              />\n            </div>\n          )}\n          {!isLastMonth() && (\n            <div className=\"home-container091\"\n            onClick={handleNextMonth}>\n              <img\n                alt=\"image\"\n                src=\"/img/right-200w.png\"\n                className=\"home-image17\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <table className=\"calendar-table\">\n        <thead>{renderTableHeader()}</thead>\n        <tbody>\n          {generateDaysTable().map((week, weekIndex) => (\n            <tr key={weekIndex}>\n              {week.map((day, dayIndex) => (\n                <td key={dayIndex} >\n                  {day !== null ? \n                  <div class=\"home-container109X\">\n                    <div class={highlightCurrentDay(day) ? 'home-container110XSelect' : 'home-container110X'} >\n                        <span class={highlightCurrentDay(day) ? 'home-textSelect' : 'home-text067X'}>{day}</span>\n                    </div>\n                </div> : null}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}