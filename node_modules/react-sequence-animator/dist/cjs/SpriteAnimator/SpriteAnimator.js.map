{"version":3,"sources":["../../../src/SpriteAnimator/SpriteAnimator.tsx"],"names":["DEFAULT_POSITION","top","left","width","height","SpriteAnimator","React","Component","frame","_animationFrame","requestAnimationFrame","_onAnimate","timestamp","props","numOfFrames","loop","easing","duration","onSequenceEnd","onAnimationStop","_animationStart","nextFrame","Math","floor","setState","_playAnimation","componentDidMount","autoplay","start","componentDidUpdate","nextProps","componentWillUnmount","cancelAnimationFrame","stop","reset","render","state","getPosition","children","styles","wrapper","innerWrapper","Children","only"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './SpriteAnimator.scss';\nimport { ease } from '../common';\nimport {\n  Position,\n  SpriteAnimatorDefaultProps,\n  SpriteAnimatorProps,\n  SpriteAnimatorState,\n} from './types';\n\nconst DEFAULT_POSITION: Position = {\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n};\n\nexport class SpriteAnimator extends React.Component<\n  SpriteAnimatorProps,\n  SpriteAnimatorState\n> {\n  static displayName = 'SpriteAnimator';\n  static defaultProps: SpriteAnimatorDefaultProps = {\n    autoplay: true,\n    easing: 'linear',\n    loop: true,\n    numOfFrames: 0,\n    getPosition: () => DEFAULT_POSITION,\n  };\n  state = {\n    frame: 0,\n  };\n  private _animationFrame: ReturnType<typeof requestAnimationFrame>;\n  private _animationStart: number | null;\n\n  componentDidMount() {\n    const { autoplay } = this.props;\n\n    if (autoplay) {\n      this.start();\n    }\n  }\n\n  componentDidUpdate(nextProps: SpriteAnimatorProps) {\n    if (nextProps.numOfFrames !== this.props.numOfFrames) {\n      this.start();\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this._animationFrame);\n  }\n\n  start() {\n    this._animationStart = null;\n    this._playAnimation();\n  }\n\n  stop() {\n    const { onAnimationStop } = this.props;\n    cancelAnimationFrame(this._animationFrame);\n\n    if (onAnimationStop) {\n      onAnimationStop();\n    }\n  }\n\n  reset() {\n    this.setState({ frame: 0 });\n  }\n\n  _playAnimation = () => {\n    this._animationFrame = requestAnimationFrame(this._onAnimate);\n  };\n\n  _onAnimate = (timestamp: number) => {\n    const {\n      numOfFrames,\n      loop,\n      easing,\n      duration,\n      onSequenceEnd,\n      onAnimationStop,\n    } = this.props;\n\n    if (!this._animationStart) {\n      this._animationStart = timestamp;\n    }\n\n    let nextFrame = Math.floor(\n      ease(easing)(timestamp - this._animationStart, 0, numOfFrames, duration),\n    );\n\n    if (nextFrame > numOfFrames - 1) {\n      if (onSequenceEnd) {\n        onSequenceEnd();\n      }\n\n      if (loop) {\n        nextFrame %= numOfFrames;\n        this._animationStart = timestamp;\n      } else {\n        nextFrame = -1;\n      }\n    }\n\n    if (nextFrame > -1) {\n      this.setState({ frame: nextFrame }, () => {\n        this._playAnimation();\n      });\n    } else if (onAnimationStop) {\n      onAnimationStop();\n    }\n  };\n\n  render() {\n    const { frame } = this.state;\n    const { getPosition, children } = this.props;\n    const { width, height, top, left } = getPosition(frame);\n\n    return (\n      <div className={styles.wrapper} style={{ width, height }}>\n        <div className={styles.innerWrapper} style={{ top: -top, left: -left }}>\n          {React.Children.only(children)}\n        </div>\n      </div>\n    );\n  }\n}\n"]}